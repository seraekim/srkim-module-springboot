<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	
	<!-- =========================================================== -->
	<!--     Module Description                                      -->
	<!-- =========================================================== -->
	<groupId>org.srkim.module</groupId>
	<artifactId>srkim-module-springboot</artifactId>
	<version>0.1</version>
	<packaging>pom</packaging>
	<name>srkim-module-springboot</name>
	
	<description>Serae Kim's core springboot module</description>

	<!-- =========================================================== -->
	<!--     Developers and Contributors                             -->
	<!-- =========================================================== -->
	<developers>
		<developer>
			<name>Serae Kim</name>
			<id>srkim</id>
			<email>dkzksp0812@naver.com</email>
			<roles>
				<role>Java Developer</role>
				<role>Module Maintainer</role>
			</roles>
		</developer>
	</developers>
	
	<!-- =========================================================== -->
	<!--     Dependency Management                                   -->
	<!-- =========================================================== -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<github.global.server>github</github.global.server>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
<!-- 	<modules> -->
<!-- 		<module>srkim-socket-server</module> -->
<!-- 		<module>srkim-socket-utils</module> -->
<!-- 		<module>srkim-socket-client</module> -->
<!-- 	</modules> -->

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>
	<build>
        <plugins>
            <!-- <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin> -->
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
<!--                     <altDeploymentRepository>internal.repo::default::file://${project.basedir}/../${project.name}-mvn-repo</altDeploymentRepository> -->
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<configuration>
					<!-- git commit message -->
					<message>Maven artifacts for ${project.version}</message>
					<!-- disable webpage processing -->
					<noJekyll>true</noJekyll>
					<!-- matches distribution management repository url above -->
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
					<!-- remote branch name -->
					<branch>refs/heads/mvn-repo</branch>
					<!-- If you remove this then the old artifact will be removed and new 
						one will replace. But with the merge tag you can just release by changing 
						the version -->
					<merge>true</merge>
					<includes>
						<include>**/*</include>
					</includes>
					<!-- github repo name -->
					<repositoryName>${project.name}</repositoryName>
					<!-- github username -->
					<repositoryOwner>seraekim</repositoryOwner>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>
</project>
